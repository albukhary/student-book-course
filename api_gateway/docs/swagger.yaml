definitions:
  main.Book:
    properties:
      author:
        type: string
      bookId:
        type: integer
      title:
        type: string
    type: object
  main.Course:
    properties:
      courseId:
        type: integer
      instructor:
        type: string
      title:
        type: string
    type: object
  main.Student:
    properties:
      email:
        type: string
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
    type: object
info:
  contact: {}
paths:
  /books/student/{id}:
    get:
      parameters:
      - description: Student ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Book'
            type: array
      summary: Retrieves the borrowed books of the student based on given ID
      tags:
      - Student Related
  /courses/student/{id}:
    get:
      parameters:
      - description: Student ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Course'
            type: array
      summary: Retrieves the enrolled courses of the student based on given ID
      tags:
      - Student Related
  /create/student:
    post:
      consumes:
      - application/json
      parameters:
      - description: Student details
        in: body
        name: details
        required: true
        schema:
          $ref: '#/definitions/main.Student'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Student'
      summary: Creates a student record with user input details and writes into database
      tags:
      - Student Related
  /delete/student/{id}:
    delete:
      parameters:
      - description: Student ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Student'
      summary: Deletes a student with the specified ID
      tags:
      - Student Related
  /student/{id}:
    get:
      parameters:
      - description: Student ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Student'
      summary: Retrieves user based on given ID
      tags:
      - Student Related
  /students:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Student'
            type: array
      summary: Retrieves the list of all students
      tags:
      - Student Related
  /update/student/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: Updated Student Details
        in: body
        name: details
        required: true
        schema:
          $ref: '#/definitions/main.Student'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Student'
      summary: Updates a student record with user input details and writes into database
      tags:
      - Student Related
swagger: "2.0"
